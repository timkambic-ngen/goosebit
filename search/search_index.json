{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#what-is-goosebit","title":"What is gooseBit?","text":"<p>A simplistic, opinionated remote update server implementing hawkBit\u2122's DDI API, designed to make remote updates of embedded devices easier.</p>"},{"location":"#assumptions","title":"Assumptions","text":"<ul> <li>Devices use SWUpdate for managing software updates.</li> </ul>"},{"location":"#features","title":"Features","text":""},{"location":"#device-registry","title":"Device Registry","text":"<p>When a device connects to gooseBit for the first time, it is automatically added to the device registry. The server will then request the device's configuration data, including:</p> <ul> <li><code>hw_model</code> and <code>hw_revision</code>: Used to match compatible software.</li> <li><code>sw_version</code>: Indicates the currently installed software version.</li> </ul> <p>The registry tracks each device's status, including the last online timestamp, installed software version, update state, and more.</p>"},{"location":"#software-repository","title":"Software Repository","text":"<p>Software packages (<code>*.swu</code> files) can be hosted directly on the gooseBit server or on an external server. gooseBit parses the software metadata to determine compatibility with specific hardware models and revisions.</p>"},{"location":"#device-update-modes","title":"Device Update Modes","text":"<p>Devices can be configured with different update modes. The default mode is <code>Rollout</code>.</p>"},{"location":"#1-manual-update-to-specified-software","title":"1. Manual Update to Specified Software","text":"<p>Assign specific software to a device manually. Once installed, no further updates will be triggered.</p>"},{"location":"#2-automatic-update-to-latest-software","title":"2. Automatic Update to Latest Software","text":"<p>Automatically updates the device to the latest compatible software, based on the reported <code>hw_model</code> and <code>hw_revision</code>.</p>"},{"location":"#3-software-rollout","title":"3. Software Rollout","text":"<p>Rollouts target all devices with a specified \"feed\" value, ensuring that the assigned software is installed on all matching devices. Rollouts also track success and error rates, with future plans for automatic aborts. If multiple rollouts exist for the same feed, the most recent rollout takes precedence.</p>"},{"location":"#pause-updates","title":"Pause Updates","text":"<p>Devices can be pinned to their current software version, preventing any updates from being applied.</p>"},{"location":"#real-time-update-logs","title":"Real-time Update Logs","text":"<p>While updates are in progress, gooseBit captures real-time logs, which are accessible through the device repository.</p>"},{"location":"development/","title":"Development","text":""},{"location":"development/#installation","title":"Installation","text":"<p>Install development dependencies using Poetry:</p> <pre><code>poetry install --with dev\n</code></pre> <p>gooseBit also has dependencies for documentation and tests, you can install them all with:</p> <pre><code>poetry install --with dev,docs,tests\n</code></pre> <p>You can also just install all extras with:</p> <pre><code>poetry install --all-extras\n</code></pre>"},{"location":"development/#development_1","title":"Development","text":""},{"location":"development/#code-formatting-and-linting","title":"Code formatting and linting","text":"<p>Code is formatted using different tools</p> <ul> <li>black and isort for <code>*.py</code></li> <li>biomejs for <code>*.js</code>, <code>*.json</code></li> <li>prettier for <code>*.html</code>, <code>*.md</code>, <code>*.yml</code>, <code>*.yaml</code></li> <li>djlint for <code>*.html.jinja</code></li> </ul> <p>Code is linted using different tools as well</p> <ul> <li>flake8 for <code>*.py</code></li> <li>biomejs for <code>*.js</code></li> <li>djlint for <code>*.html.jinja</code></li> </ul> <p>Best to have pre-commit install git hooks that run all those tools before a commit:</p> <pre><code>poetry run pre-commit install\n</code></pre> <p>To manually apply the hooks to all files use:</p> <pre><code>poetry run pre-commit run --all-files\n</code></pre>"},{"location":"development/#testing","title":"Testing","text":"<p>Tests are implemented using pytest. To run all tests</p> <pre><code>poetry run pytest\n</code></pre>"},{"location":"development/#structure","title":"Structure","text":"<p>The structure of gooseBit is as follows:</p> <ul> <li><code>api</code>: Files for the API.</li> <li><code>ui</code>: Files for the UI.<ul> <li><code>bff</code>: Backend for frontend API.</li> <li><code>static</code>: Static files.</li> <li><code>templates</code>: Jinja2 formatted templates.</li> <li><code>nav</code>: Navbar handler.</li> </ul> </li> <li><code>updater</code>: DDI API handler and device update manager.</li> <li><code>updates</code>: SWUpdate file parsing.</li> <li><code>auth</code>: Authentication functions and permission handling.</li> <li><code>models</code>: Database models.</li> <li><code>db</code>: Database config and initialization.</li> <li><code>schema</code>: Pydantic models used for API type hinting.</li> <li><code>settings</code>: Settings loader and handler.</li> <li><code>telemetry</code>: Telemetry data handlers.</li> <li><code>routes</code>: Routes for a giving endpoint, including the router.</li> </ul>"},{"location":"quick_start/","title":"Quick Start","text":""},{"location":"quick_start/#installation","title":"Installation","text":""},{"location":"quick_start/#install-dependencies-using-poetry","title":"Install dependencies using Poetry:","text":"<pre><code>poetry install\n</code></pre>"},{"location":"quick_start/#launch-goosebit","title":"Launch gooseBit:","text":"<pre><code>python main.py\n</code></pre>"},{"location":"quick_start/#initial-configuration","title":"Initial Configuration","text":"<p>Before running gooseBit for the first time, update the default credentials in <code>settings.yaml</code>. The default login for testing purposes is:</p> <ul> <li>Username: <code>admin@goosebit.local</code></li> <li>Password: <code>admin</code></li> </ul>"}]}